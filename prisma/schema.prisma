// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters", "relationJoins"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int           @id @default(autoincrement())
  name         String?
  email        String        @unique
  subscription Subscription?
  meetings     Meeting[]
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
}

model Plan {
  id            Int            @id @default(autoincrement())
  name          String         @unique
  price         Decimal
  subscriptions Subscription[]
  type          TypePlan
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
}

enum TypePlan {
  BASIC
  SILVER
  GOLDEN
}

model Subscription {
  id        Int       @id @default(autoincrement())
  startDate DateTime  @default(now())
  endDate   DateTime?
  user      User      @relation(fields: [user_id], references: [id])
  user_id   Int       @unique
  plan      Plan      @relation(fields: [plan_id], references: [id])
  plan_id   Int
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

enum Role {
  admin
  moderator
  guest
}

model Meeting {
  id        Int       @id @default(autoincrement())
  user_id   Int
  code      String    @unique
  startDate DateTime  @default(now())
  endDate   DateTime?
  user      User?     @relation(fields: [user_id], references: [id])
  role      Role
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}
